Nonterminals useless in grammar

   numero


Terminals unused in grammar

   TOK_PUNTOYCOMA
   TOK_COMA
   TOK_CORCHETEIZQUIERDO
   TOK_CORCHETEDERECHO
   TOK_ASIGNACION
   TOK_MAS
   TOK_MENOS
   TOK_DIVISION
   TOK_ASTERISCO
   TOK_NOT
   TOK_MENOR
   TOK_MAYOR
   TOK_ERROR
   fn_complete_name
   tipo_retorno


Rules useless in grammar

   91 numero: digito
   92       | numero digito


Grammar

    0 $accept: programa $end

    1 programa: inicio TOK_MAIN '{' declaraciones funciones escritura_main sentencias '}' escribir_fin
    2         | inicio TOK_MAIN '{' funciones escritura_main sentencias '}'

    3 inicio: %empty

    4 escritura_main: %empty

    5 escribir_fin: %empty

    6 declaraciones: declaracion
    7              | declaracion declaraciones

    8 declaracion: clase identificadores ';'

    9 clase: clase_escalar
   10      | clase_vector

   11 clase_escalar: tipo

   12 tipo: TOK_INT
   13     | TOK_BOOLEANO

   14 clase_vector: TOK_ARRAY tipo '[' TOK_CONSTANTE_ENTERA ']'

   15 elemento_vector: TOK_IDENTIFICADOR '[' exp ']'

   16 identificadores: identificador
   17                | identificador ',' identificadores

   18 funciones: %empty
   19          | funcion funciones

   20 funcion: fn_declaration sentencias TOK_LLAVEDERECHA

   21 fn_declaration: fn_name TOK_PARENTESISIZQUIERDO parametros_funcion TOK_PARENTESISDERECHO TOK_LLAVEIZQUIERDA declaraciones_funcion

   22 fn_name: TOK_FUNCTION tipo TOK_IDENTIFICADOR

   23 funcion: TOK_FUNCTION tipo TOK_IDENTIFICADOR '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}'

   24 parametros_funcion: parametro_funcion resto_parametros_funcion
   25                   | %empty

   26 resto_parametros_funcion: ';' parametro_funcion resto_parametros_funcion
   27                         | %empty

   28 idpf: TOK_IDENTIFICADOR

   29 parametro_funcion: tipo idpf

   30 declaraciones_funcion: declaraciones
   31                      | %empty

   32 sentencias: sentencia
   33           | sentencia sentencias

   34 sentencia: sentencia_simple ';'
   35          | bloque

   36 sentencia_simple: asignacion
   37                 | lectura
   38                 | escritura
   39                 | retorno_funcion

   40 bloque: condicional
   41       | bucle

   42 asignacion: TOK_IDENTIFICADOR '=' exp
   43           | elemento_vector '=' exp

   44 condicional: if_exp ')' '{' sentencias '}'
   45            | if_else_exp TOK_ELSE '{' sentencias '}'

   46 if_exp: TOK_IF '(' exp

   47 if_else_exp: if_exp ')' '{' sentencias '}'

   48 bucle: while_exp sentencias '}'

   49 while: TOK_WHILE '('

   50 while_exp: while exp ')' '{'

   51 lectura: TOK_SCANF TOK_IDENTIFICADOR

   52 escritura: TOK_PRINTF exp

   53 retorno_funcion: TOK_RETURN exp

   54 exp: exp '+' exp
   55    | exp '-' exp
   56    | exp '/' exp
   57    | exp '*' exp
   58    | '-' exp
   59    | exp TOK_AND exp
   60    | exp TOK_OR exp
   61    | '!' exp
   62    | TOK_IDENTIFICADOR
   63    | constante
   64    | '(' exp ')'
   65    | '(' comparacion ')'
   66    | elemento_vector
   67    | identificador '(' lista_expresiones ')'

   68 lista_expresiones: exp resto_lista_expresiones
   69                  | %empty

   70 resto_lista_expresiones: ',' exp resto_lista_expresiones
   71                        | %empty

   72 comparacion: exp TOK_IGUAL exp
   73            | exp TOK_DISTINTO exp
   74            | exp TOK_MAYORIGUAL exp
   75            | exp TOK_MENORIGUAL exp
   76            | exp '>' exp
   77            | exp '<' exp

   78 constante: constante_logica
   79          | constante_entera

   80 constante_logica: TOK_TRUE
   81                 | TOK_FALSE

   82 constante_entera: TOK_CONSTANTE_ENTERA

   83 cola_identificador: alfanumerico
   84                   | alfanumerico cola_identificador

   85 alfanumerico: letra
   86             | digito

   87 letra: TOK_IDENTIFICADOR

   88 digito: TOK_CONSTANTE_ENTERA

   89 identificador: TOK_IDENTIFICADOR
   90              | letra cola_identificador


Terminals, with rules where they appear

$end (0) 0
'!' (33) 61
'(' (40) 23 46 49 64 65 67
')' (41) 23 44 47 50 64 65 67
'*' (42) 57
'+' (43) 54
',' (44) 17 70
'-' (45) 55 58
'/' (47) 56
';' (59) 8 26 34
'<' (60) 77
'=' (61) 42 43
'>' (62) 76
'[' (91) 14 15
']' (93) 14 15
'{' (123) 1 2 23 44 45 47 50
'}' (125) 1 2 23 44 45 47 48
error (256)
TOK_MAIN (258) 1 2
TOK_INT (259) 12
TOK_BOOLEANO (260) 13
TOK_ARRAY (261) 14
TOK_FUNCTION (262) 22 23
TOK_IF (263) 46
TOK_ELSE (264) 45
TOK_WHILE (265) 49
TOK_SCANF (266) 51
TOK_PRINTF (267) 52
TOK_RETURN (268) 53
TOK_IDENTIFICADOR (269) 15 22 23 28 42 51 62 87 89
TOK_PUNTOYCOMA (270)
TOK_COMA (271)
TOK_PARENTESISIZQUIERDO (272) 21
TOK_PARENTESISDERECHO (273) 21
TOK_CORCHETEIZQUIERDO (274)
TOK_CORCHETEDERECHO (275)
TOK_LLAVEIZQUIERDA (276) 21
TOK_LLAVEDERECHA (277) 20
TOK_ASIGNACION (278)
TOK_MAS (279)
TOK_MENOS (280)
TOK_DIVISION (281)
TOK_ASTERISCO (282)
TOK_AND (283) 59
TOK_OR (284) 60
TOK_NOT (285)
TOK_IGUAL (286) 72
TOK_DISTINTO (287) 73
TOK_MENORIGUAL (288) 75
TOK_MAYORIGUAL (289) 74
TOK_MENOR (290)
TOK_MAYOR (291)
TOK_CONSTANTE_ENTERA (292) 14 82 88
TOK_FALSE (293) 81
TOK_TRUE (294) 80
TOK_ERROR (295)
fn_complete_name (296)
tipo_retorno (297)
MENOSU (298)


Nonterminals, with rules where they appear

$accept (60)
    on left: 0
programa (61)
    on left: 1 2, on right: 0
inicio (62)
    on left: 3, on right: 1 2
escritura_main (63)
    on left: 4, on right: 1 2
escribir_fin (64)
    on left: 5, on right: 1
declaraciones (65)
    on left: 6 7, on right: 1 7 30
declaracion (66)
    on left: 8, on right: 6 7
clase (67)
    on left: 9 10, on right: 8
clase_escalar (68)
    on left: 11, on right: 9
tipo (69)
    on left: 12 13, on right: 11 14 22 23 29
clase_vector (70)
    on left: 14, on right: 10
elemento_vector (71)
    on left: 15, on right: 43 66
identificadores (72)
    on left: 16 17, on right: 8 17
funciones (73)
    on left: 18 19, on right: 1 2 19
funcion (74)
    on left: 20 23, on right: 19
fn_declaration (75)
    on left: 21, on right: 20
fn_name (76)
    on left: 22, on right: 21
parametros_funcion (77)
    on left: 24 25, on right: 21 23
resto_parametros_funcion (78)
    on left: 26 27, on right: 24 26
idpf (79)
    on left: 28, on right: 29
parametro_funcion (80)
    on left: 29, on right: 24 26
declaraciones_funcion (81)
    on left: 30 31, on right: 21 23
sentencias (82)
    on left: 32 33, on right: 1 2 20 23 33 44 45 47 48
sentencia (83)
    on left: 34 35, on right: 32 33
sentencia_simple (84)
    on left: 36 37 38 39, on right: 34
bloque (85)
    on left: 40 41, on right: 35
asignacion (86)
    on left: 42 43, on right: 36
condicional (87)
    on left: 44 45, on right: 40
if_exp (88)
    on left: 46, on right: 44 47
if_else_exp (89)
    on left: 47, on right: 45
bucle (90)
    on left: 48, on right: 41
while (91)
    on left: 49, on right: 50
while_exp (92)
    on left: 50, on right: 48
lectura (93)
    on left: 51, on right: 37
escritura (94)
    on left: 52, on right: 38
retorno_funcion (95)
    on left: 53, on right: 39
exp (96)
    on left: 54 55 56 57 58 59 60 61 62 63 64 65 66 67, on right: 15
    42 43 46 50 52 53 54 55 56 57 58 59 60 61 64 68 70 72 73 74 75
    76 77
lista_expresiones (97)
    on left: 68 69, on right: 67
resto_lista_expresiones (98)
    on left: 70 71, on right: 68 70
comparacion (99)
    on left: 72 73 74 75 76 77, on right: 65
constante (100)
    on left: 78 79, on right: 63
constante_logica (101)
    on left: 80 81, on right: 78
constante_entera (102)
    on left: 82, on right: 79
cola_identificador (103)
    on left: 83 84, on right: 84 90
alfanumerico (104)
    on left: 85 86, on right: 83 84
letra (105)
    on left: 87, on right: 85 90
digito (106)
    on left: 88, on right: 86
identificador (107)
    on left: 89 90, on right: 16 17 67


State 0

    0 $accept: . programa $end

    $default  reduce using rule 3 (inicio)

    programa  go to state 1
    inicio    go to state 2


State 1

    0 $accept: programa . $end

    $end  shift, and go to state 3


State 2

    1 programa: inicio . TOK_MAIN '{' declaraciones funciones escritura_main sentencias '}' escribir_fin
    2         | inicio . TOK_MAIN '{' funciones escritura_main sentencias '}'

    TOK_MAIN  shift, and go to state 4


State 3

    0 $accept: programa $end .

    $default  accept


State 4

    1 programa: inicio TOK_MAIN . '{' declaraciones funciones escritura_main sentencias '}' escribir_fin
    2         | inicio TOK_MAIN . '{' funciones escritura_main sentencias '}'

    '{'  shift, and go to state 5


State 5

    1 programa: inicio TOK_MAIN '{' . declaraciones funciones escritura_main sentencias '}' escribir_fin
    2         | inicio TOK_MAIN '{' . funciones escritura_main sentencias '}'

    TOK_INT       shift, and go to state 6
    TOK_BOOLEANO  shift, and go to state 7
    TOK_ARRAY     shift, and go to state 8
    TOK_FUNCTION  shift, and go to state 9

    $default  reduce using rule 18 (funciones)

    declaraciones   go to state 10
    declaracion     go to state 11
    clase           go to state 12
    clase_escalar   go to state 13
    tipo            go to state 14
    clase_vector    go to state 15
    funciones       go to state 16
    funcion         go to state 17
    fn_declaration  go to state 18
    fn_name         go to state 19


State 6

   12 tipo: TOK_INT .

    $default  reduce using rule 12 (tipo)


State 7

   13 tipo: TOK_BOOLEANO .

    $default  reduce using rule 13 (tipo)


State 8

   14 clase_vector: TOK_ARRAY . tipo '[' TOK_CONSTANTE_ENTERA ']'

    TOK_INT       shift, and go to state 6
    TOK_BOOLEANO  shift, and go to state 7

    tipo  go to state 20


State 9

   22 fn_name: TOK_FUNCTION . tipo TOK_IDENTIFICADOR
   23 funcion: TOK_FUNCTION . tipo TOK_IDENTIFICADOR '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}'

    TOK_INT       shift, and go to state 6
    TOK_BOOLEANO  shift, and go to state 7

    tipo  go to state 21


State 10

    1 programa: inicio TOK_MAIN '{' declaraciones . funciones escritura_main sentencias '}' escribir_fin

    TOK_FUNCTION  shift, and go to state 9

    $default  reduce using rule 18 (funciones)

    funciones       go to state 22
    funcion         go to state 17
    fn_declaration  go to state 18
    fn_name         go to state 19


State 11

    6 declaraciones: declaracion .
    7              | declaracion . declaraciones

    TOK_INT       shift, and go to state 6
    TOK_BOOLEANO  shift, and go to state 7
    TOK_ARRAY     shift, and go to state 8

    $default  reduce using rule 6 (declaraciones)

    declaraciones  go to state 23
    declaracion    go to state 11
    clase          go to state 12
    clase_escalar  go to state 13
    tipo           go to state 14
    clase_vector   go to state 15


State 12

    8 declaracion: clase . identificadores ';'

    TOK_IDENTIFICADOR  shift, and go to state 24

    identificadores  go to state 25
    letra            go to state 26
    identificador    go to state 27


State 13

    9 clase: clase_escalar .

    $default  reduce using rule 9 (clase)


State 14

   11 clase_escalar: tipo .

    $default  reduce using rule 11 (clase_escalar)


State 15

   10 clase: clase_vector .

    $default  reduce using rule 10 (clase)


State 16

    2 programa: inicio TOK_MAIN '{' funciones . escritura_main sentencias '}'

    $default  reduce using rule 4 (escritura_main)

    escritura_main  go to state 28


State 17

   19 funciones: funcion . funciones

    TOK_FUNCTION  shift, and go to state 9

    $default  reduce using rule 18 (funciones)

    funciones       go to state 29
    funcion         go to state 17
    fn_declaration  go to state 18
    fn_name         go to state 19


State 18

   20 funcion: fn_declaration . sentencias TOK_LLAVEDERECHA

    TOK_IF             shift, and go to state 30
    TOK_WHILE          shift, and go to state 31
    TOK_SCANF          shift, and go to state 32
    TOK_PRINTF         shift, and go to state 33
    TOK_RETURN         shift, and go to state 34
    TOK_IDENTIFICADOR  shift, and go to state 35

    elemento_vector   go to state 36
    sentencias        go to state 37
    sentencia         go to state 38
    sentencia_simple  go to state 39
    bloque            go to state 40
    asignacion        go to state 41
    condicional       go to state 42
    if_exp            go to state 43
    if_else_exp       go to state 44
    bucle             go to state 45
    while             go to state 46
    while_exp         go to state 47
    lectura           go to state 48
    escritura         go to state 49
    retorno_funcion   go to state 50


State 19

   21 fn_declaration: fn_name . TOK_PARENTESISIZQUIERDO parametros_funcion TOK_PARENTESISDERECHO TOK_LLAVEIZQUIERDA declaraciones_funcion

    TOK_PARENTESISIZQUIERDO  shift, and go to state 51


State 20

   14 clase_vector: TOK_ARRAY tipo . '[' TOK_CONSTANTE_ENTERA ']'

    '['  shift, and go to state 52


State 21

   22 fn_name: TOK_FUNCTION tipo . TOK_IDENTIFICADOR
   23 funcion: TOK_FUNCTION tipo . TOK_IDENTIFICADOR '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}'

    TOK_IDENTIFICADOR  shift, and go to state 53


State 22

    1 programa: inicio TOK_MAIN '{' declaraciones funciones . escritura_main sentencias '}' escribir_fin

    $default  reduce using rule 4 (escritura_main)

    escritura_main  go to state 54


State 23

    7 declaraciones: declaracion declaraciones .

    $default  reduce using rule 7 (declaraciones)


State 24

   87 letra: TOK_IDENTIFICADOR .
   89 identificador: TOK_IDENTIFICADOR .

    ';'       reduce using rule 89 (identificador)
    ','       reduce using rule 89 (identificador)
    $default  reduce using rule 87 (letra)


State 25

    8 declaracion: clase identificadores . ';'

    ';'  shift, and go to state 55


State 26

   90 identificador: letra . cola_identificador

    TOK_IDENTIFICADOR     shift, and go to state 56
    TOK_CONSTANTE_ENTERA  shift, and go to state 57

    cola_identificador  go to state 58
    alfanumerico        go to state 59
    letra               go to state 60
    digito              go to state 61


State 27

   16 identificadores: identificador .
   17                | identificador . ',' identificadores

    ','  shift, and go to state 62

    $default  reduce using rule 16 (identificadores)


State 28

    2 programa: inicio TOK_MAIN '{' funciones escritura_main . sentencias '}'

    TOK_IF             shift, and go to state 30
    TOK_WHILE          shift, and go to state 31
    TOK_SCANF          shift, and go to state 32
    TOK_PRINTF         shift, and go to state 33
    TOK_RETURN         shift, and go to state 34
    TOK_IDENTIFICADOR  shift, and go to state 35

    elemento_vector   go to state 36
    sentencias        go to state 63
    sentencia         go to state 38
    sentencia_simple  go to state 39
    bloque            go to state 40
    asignacion        go to state 41
    condicional       go to state 42
    if_exp            go to state 43
    if_else_exp       go to state 44
    bucle             go to state 45
    while             go to state 46
    while_exp         go to state 47
    lectura           go to state 48
    escritura         go to state 49
    retorno_funcion   go to state 50


State 29

   19 funciones: funcion funciones .

    $default  reduce using rule 19 (funciones)


State 30

   46 if_exp: TOK_IF . '(' exp

    '('  shift, and go to state 64


State 31

   49 while: TOK_WHILE . '('

    '('  shift, and go to state 65


State 32

   51 lectura: TOK_SCANF . TOK_IDENTIFICADOR

    TOK_IDENTIFICADOR  shift, and go to state 66


State 33

   52 escritura: TOK_PRINTF . exp

    TOK_IDENTIFICADOR     shift, and go to state 67
    TOK_CONSTANTE_ENTERA  shift, and go to state 68
    TOK_FALSE             shift, and go to state 69
    TOK_TRUE              shift, and go to state 70
    '-'                   shift, and go to state 71
    '!'                   shift, and go to state 72
    '('                   shift, and go to state 73

    elemento_vector   go to state 74
    exp               go to state 75
    constante         go to state 76
    constante_logica  go to state 77
    constante_entera  go to state 78
    letra             go to state 26
    identificador     go to state 79


State 34

   53 retorno_funcion: TOK_RETURN . exp

    TOK_IDENTIFICADOR     shift, and go to state 67
    TOK_CONSTANTE_ENTERA  shift, and go to state 68
    TOK_FALSE             shift, and go to state 69
    TOK_TRUE              shift, and go to state 70
    '-'                   shift, and go to state 71
    '!'                   shift, and go to state 72
    '('                   shift, and go to state 73

    elemento_vector   go to state 74
    exp               go to state 80
    constante         go to state 76
    constante_logica  go to state 77
    constante_entera  go to state 78
    letra             go to state 26
    identificador     go to state 79


State 35

   15 elemento_vector: TOK_IDENTIFICADOR . '[' exp ']'
   42 asignacion: TOK_IDENTIFICADOR . '=' exp

    '['  shift, and go to state 81
    '='  shift, and go to state 82


State 36

   43 asignacion: elemento_vector . '=' exp

    '='  shift, and go to state 83


State 37

   20 funcion: fn_declaration sentencias . TOK_LLAVEDERECHA

    TOK_LLAVEDERECHA  shift, and go to state 84


State 38

   32 sentencias: sentencia .
   33           | sentencia . sentencias

    TOK_IF             shift, and go to state 30
    TOK_WHILE          shift, and go to state 31
    TOK_SCANF          shift, and go to state 32
    TOK_PRINTF         shift, and go to state 33
    TOK_RETURN         shift, and go to state 34
    TOK_IDENTIFICADOR  shift, and go to state 35

    $default  reduce using rule 32 (sentencias)

    elemento_vector   go to state 36
    sentencias        go to state 85
    sentencia         go to state 38
    sentencia_simple  go to state 39
    bloque            go to state 40
    asignacion        go to state 41
    condicional       go to state 42
    if_exp            go to state 43
    if_else_exp       go to state 44
    bucle             go to state 45
    while             go to state 46
    while_exp         go to state 47
    lectura           go to state 48
    escritura         go to state 49
    retorno_funcion   go to state 50


State 39

   34 sentencia: sentencia_simple . ';'

    ';'  shift, and go to state 86


State 40

   35 sentencia: bloque .

    $default  reduce using rule 35 (sentencia)


State 41

   36 sentencia_simple: asignacion .

    $default  reduce using rule 36 (sentencia_simple)


State 42

   40 bloque: condicional .

    $default  reduce using rule 40 (bloque)


State 43

   44 condicional: if_exp . ')' '{' sentencias '}'
   47 if_else_exp: if_exp . ')' '{' sentencias '}'

    ')'  shift, and go to state 87


State 44

   45 condicional: if_else_exp . TOK_ELSE '{' sentencias '}'

    TOK_ELSE  shift, and go to state 88


State 45

   41 bloque: bucle .

    $default  reduce using rule 41 (bloque)


State 46

   50 while_exp: while . exp ')' '{'

    TOK_IDENTIFICADOR     shift, and go to state 67
    TOK_CONSTANTE_ENTERA  shift, and go to state 68
    TOK_FALSE             shift, and go to state 69
    TOK_TRUE              shift, and go to state 70
    '-'                   shift, and go to state 71
    '!'                   shift, and go to state 72
    '('                   shift, and go to state 73

    elemento_vector   go to state 74
    exp               go to state 89
    constante         go to state 76
    constante_logica  go to state 77
    constante_entera  go to state 78
    letra             go to state 26
    identificador     go to state 79


State 47

   48 bucle: while_exp . sentencias '}'

    TOK_IF             shift, and go to state 30
    TOK_WHILE          shift, and go to state 31
    TOK_SCANF          shift, and go to state 32
    TOK_PRINTF         shift, and go to state 33
    TOK_RETURN         shift, and go to state 34
    TOK_IDENTIFICADOR  shift, and go to state 35

    elemento_vector   go to state 36
    sentencias        go to state 90
    sentencia         go to state 38
    sentencia_simple  go to state 39
    bloque            go to state 40
    asignacion        go to state 41
    condicional       go to state 42
    if_exp            go to state 43
    if_else_exp       go to state 44
    bucle             go to state 45
    while             go to state 46
    while_exp         go to state 47
    lectura           go to state 48
    escritura         go to state 49
    retorno_funcion   go to state 50


State 48

   37 sentencia_simple: lectura .

    $default  reduce using rule 37 (sentencia_simple)


State 49

   38 sentencia_simple: escritura .

    $default  reduce using rule 38 (sentencia_simple)


State 50

   39 sentencia_simple: retorno_funcion .

    $default  reduce using rule 39 (sentencia_simple)


State 51

   21 fn_declaration: fn_name TOK_PARENTESISIZQUIERDO . parametros_funcion TOK_PARENTESISDERECHO TOK_LLAVEIZQUIERDA declaraciones_funcion

    TOK_INT       shift, and go to state 6
    TOK_BOOLEANO  shift, and go to state 7

    $default  reduce using rule 25 (parametros_funcion)

    tipo                go to state 91
    parametros_funcion  go to state 92
    parametro_funcion   go to state 93


State 52

   14 clase_vector: TOK_ARRAY tipo '[' . TOK_CONSTANTE_ENTERA ']'

    TOK_CONSTANTE_ENTERA  shift, and go to state 94


State 53

   22 fn_name: TOK_FUNCTION tipo TOK_IDENTIFICADOR .
   23 funcion: TOK_FUNCTION tipo TOK_IDENTIFICADOR . '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}'

    '('  shift, and go to state 95

    $default  reduce using rule 22 (fn_name)


State 54

    1 programa: inicio TOK_MAIN '{' declaraciones funciones escritura_main . sentencias '}' escribir_fin

    TOK_IF             shift, and go to state 30
    TOK_WHILE          shift, and go to state 31
    TOK_SCANF          shift, and go to state 32
    TOK_PRINTF         shift, and go to state 33
    TOK_RETURN         shift, and go to state 34
    TOK_IDENTIFICADOR  shift, and go to state 35

    elemento_vector   go to state 36
    sentencias        go to state 96
    sentencia         go to state 38
    sentencia_simple  go to state 39
    bloque            go to state 40
    asignacion        go to state 41
    condicional       go to state 42
    if_exp            go to state 43
    if_else_exp       go to state 44
    bucle             go to state 45
    while             go to state 46
    while_exp         go to state 47
    lectura           go to state 48
    escritura         go to state 49
    retorno_funcion   go to state 50


State 55

    8 declaracion: clase identificadores ';' .

    $default  reduce using rule 8 (declaracion)


State 56

   87 letra: TOK_IDENTIFICADOR .

    $default  reduce using rule 87 (letra)


State 57

   88 digito: TOK_CONSTANTE_ENTERA .

    $default  reduce using rule 88 (digito)


State 58

   90 identificador: letra cola_identificador .

    $default  reduce using rule 90 (identificador)


State 59

   83 cola_identificador: alfanumerico .
   84                   | alfanumerico . cola_identificador

    TOK_IDENTIFICADOR     shift, and go to state 56
    TOK_CONSTANTE_ENTERA  shift, and go to state 57

    $default  reduce using rule 83 (cola_identificador)

    cola_identificador  go to state 97
    alfanumerico        go to state 59
    letra               go to state 60
    digito              go to state 61


State 60

   85 alfanumerico: letra .

    $default  reduce using rule 85 (alfanumerico)


State 61

   86 alfanumerico: digito .

    $default  reduce using rule 86 (alfanumerico)


State 62

   17 identificadores: identificador ',' . identificadores

    TOK_IDENTIFICADOR  shift, and go to state 24

    identificadores  go to state 98
    letra            go to state 26
    identificador    go to state 27


State 63

    2 programa: inicio TOK_MAIN '{' funciones escritura_main sentencias . '}'

    '}'  shift, and go to state 99


State 64

   46 if_exp: TOK_IF '(' . exp

    TOK_IDENTIFICADOR     shift, and go to state 67
    TOK_CONSTANTE_ENTERA  shift, and go to state 68
    TOK_FALSE             shift, and go to state 69
    TOK_TRUE              shift, and go to state 70
    '-'                   shift, and go to state 71
    '!'                   shift, and go to state 72
    '('                   shift, and go to state 73

    elemento_vector   go to state 74
    exp               go to state 100
    constante         go to state 76
    constante_logica  go to state 77
    constante_entera  go to state 78
    letra             go to state 26
    identificador     go to state 79


State 65

   49 while: TOK_WHILE '(' .

    $default  reduce using rule 49 (while)


State 66

   51 lectura: TOK_SCANF TOK_IDENTIFICADOR .

    $default  reduce using rule 51 (lectura)


State 67

   15 elemento_vector: TOK_IDENTIFICADOR . '[' exp ']'
   62 exp: TOK_IDENTIFICADOR .
   87 letra: TOK_IDENTIFICADOR .
   89 identificador: TOK_IDENTIFICADOR .

    '['  shift, and go to state 81

    TOK_IDENTIFICADOR     reduce using rule 87 (letra)
    TOK_CONSTANTE_ENTERA  reduce using rule 87 (letra)
    '('                   reduce using rule 89 (identificador)
    $default              reduce using rule 62 (exp)


State 68

   82 constante_entera: TOK_CONSTANTE_ENTERA .

    $default  reduce using rule 82 (constante_entera)


State 69

   81 constante_logica: TOK_FALSE .

    $default  reduce using rule 81 (constante_logica)


State 70

   80 constante_logica: TOK_TRUE .

    $default  reduce using rule 80 (constante_logica)


State 71

   58 exp: '-' . exp

    TOK_IDENTIFICADOR     shift, and go to state 67
    TOK_CONSTANTE_ENTERA  shift, and go to state 68
    TOK_FALSE             shift, and go to state 69
    TOK_TRUE              shift, and go to state 70
    '-'                   shift, and go to state 71
    '!'                   shift, and go to state 72
    '('                   shift, and go to state 73

    elemento_vector   go to state 74
    exp               go to state 101
    constante         go to state 76
    constante_logica  go to state 77
    constante_entera  go to state 78
    letra             go to state 26
    identificador     go to state 79


State 72

   61 exp: '!' . exp

    TOK_IDENTIFICADOR     shift, and go to state 67
    TOK_CONSTANTE_ENTERA  shift, and go to state 68
    TOK_FALSE             shift, and go to state 69
    TOK_TRUE              shift, and go to state 70
    '-'                   shift, and go to state 71
    '!'                   shift, and go to state 72
    '('                   shift, and go to state 73

    elemento_vector   go to state 74
    exp               go to state 102
    constante         go to state 76
    constante_logica  go to state 77
    constante_entera  go to state 78
    letra             go to state 26
    identificador     go to state 79


State 73

   64 exp: '(' . exp ')'
   65    | '(' . comparacion ')'

    TOK_IDENTIFICADOR     shift, and go to state 67
    TOK_CONSTANTE_ENTERA  shift, and go to state 68
    TOK_FALSE             shift, and go to state 69
    TOK_TRUE              shift, and go to state 70
    '-'                   shift, and go to state 71
    '!'                   shift, and go to state 72
    '('                   shift, and go to state 73

    elemento_vector   go to state 74
    exp               go to state 103
    comparacion       go to state 104
    constante         go to state 76
    constante_logica  go to state 77
    constante_entera  go to state 78
    letra             go to state 26
    identificador     go to state 79


State 74

   66 exp: elemento_vector .

    $default  reduce using rule 66 (exp)


State 75

   52 escritura: TOK_PRINTF exp .
   54 exp: exp . '+' exp
   55    | exp . '-' exp
   56    | exp . '/' exp
   57    | exp . '*' exp
   59    | exp . TOK_AND exp
   60    | exp . TOK_OR exp

    TOK_AND  shift, and go to state 105
    TOK_OR   shift, and go to state 106
    '+'      shift, and go to state 107
    '-'      shift, and go to state 108
    '*'      shift, and go to state 109
    '/'      shift, and go to state 110

    $default  reduce using rule 52 (escritura)


State 76

   63 exp: constante .

    $default  reduce using rule 63 (exp)


State 77

   78 constante: constante_logica .

    $default  reduce using rule 78 (constante)


State 78

   79 constante: constante_entera .

    $default  reduce using rule 79 (constante)


State 79

   67 exp: identificador . '(' lista_expresiones ')'

    '('  shift, and go to state 111


State 80

   53 retorno_funcion: TOK_RETURN exp .
   54 exp: exp . '+' exp
   55    | exp . '-' exp
   56    | exp . '/' exp
   57    | exp . '*' exp
   59    | exp . TOK_AND exp
   60    | exp . TOK_OR exp

    TOK_AND  shift, and go to state 105
    TOK_OR   shift, and go to state 106
    '+'      shift, and go to state 107
    '-'      shift, and go to state 108
    '*'      shift, and go to state 109
    '/'      shift, and go to state 110

    $default  reduce using rule 53 (retorno_funcion)


State 81

   15 elemento_vector: TOK_IDENTIFICADOR '[' . exp ']'

    TOK_IDENTIFICADOR     shift, and go to state 67
    TOK_CONSTANTE_ENTERA  shift, and go to state 68
    TOK_FALSE             shift, and go to state 69
    TOK_TRUE              shift, and go to state 70
    '-'                   shift, and go to state 71
    '!'                   shift, and go to state 72
    '('                   shift, and go to state 73

    elemento_vector   go to state 74
    exp               go to state 112
    constante         go to state 76
    constante_logica  go to state 77
    constante_entera  go to state 78
    letra             go to state 26
    identificador     go to state 79


State 82

   42 asignacion: TOK_IDENTIFICADOR '=' . exp

    TOK_IDENTIFICADOR     shift, and go to state 67
    TOK_CONSTANTE_ENTERA  shift, and go to state 68
    TOK_FALSE             shift, and go to state 69
    TOK_TRUE              shift, and go to state 70
    '-'                   shift, and go to state 71
    '!'                   shift, and go to state 72
    '('                   shift, and go to state 73

    elemento_vector   go to state 74
    exp               go to state 113
    constante         go to state 76
    constante_logica  go to state 77
    constante_entera  go to state 78
    letra             go to state 26
    identificador     go to state 79


State 83

   43 asignacion: elemento_vector '=' . exp

    TOK_IDENTIFICADOR     shift, and go to state 67
    TOK_CONSTANTE_ENTERA  shift, and go to state 68
    TOK_FALSE             shift, and go to state 69
    TOK_TRUE              shift, and go to state 70
    '-'                   shift, and go to state 71
    '!'                   shift, and go to state 72
    '('                   shift, and go to state 73

    elemento_vector   go to state 74
    exp               go to state 114
    constante         go to state 76
    constante_logica  go to state 77
    constante_entera  go to state 78
    letra             go to state 26
    identificador     go to state 79


State 84

   20 funcion: fn_declaration sentencias TOK_LLAVEDERECHA .

    $default  reduce using rule 20 (funcion)


State 85

   33 sentencias: sentencia sentencias .

    $default  reduce using rule 33 (sentencias)


State 86

   34 sentencia: sentencia_simple ';' .

    $default  reduce using rule 34 (sentencia)


State 87

   44 condicional: if_exp ')' . '{' sentencias '}'
   47 if_else_exp: if_exp ')' . '{' sentencias '}'

    '{'  shift, and go to state 115


State 88

   45 condicional: if_else_exp TOK_ELSE . '{' sentencias '}'

    '{'  shift, and go to state 116


State 89

   50 while_exp: while exp . ')' '{'
   54 exp: exp . '+' exp
   55    | exp . '-' exp
   56    | exp . '/' exp
   57    | exp . '*' exp
   59    | exp . TOK_AND exp
   60    | exp . TOK_OR exp

    TOK_AND  shift, and go to state 105
    TOK_OR   shift, and go to state 106
    '+'      shift, and go to state 107
    '-'      shift, and go to state 108
    '*'      shift, and go to state 109
    '/'      shift, and go to state 110
    ')'      shift, and go to state 117


State 90

   48 bucle: while_exp sentencias . '}'

    '}'  shift, and go to state 118


State 91

   29 parametro_funcion: tipo . idpf

    TOK_IDENTIFICADOR  shift, and go to state 119

    idpf  go to state 120


State 92

   21 fn_declaration: fn_name TOK_PARENTESISIZQUIERDO parametros_funcion . TOK_PARENTESISDERECHO TOK_LLAVEIZQUIERDA declaraciones_funcion

    TOK_PARENTESISDERECHO  shift, and go to state 121


State 93

   24 parametros_funcion: parametro_funcion . resto_parametros_funcion

    ';'  shift, and go to state 122

    $default  reduce using rule 27 (resto_parametros_funcion)

    resto_parametros_funcion  go to state 123


State 94

   14 clase_vector: TOK_ARRAY tipo '[' TOK_CONSTANTE_ENTERA . ']'

    ']'  shift, and go to state 124


State 95

   23 funcion: TOK_FUNCTION tipo TOK_IDENTIFICADOR '(' . parametros_funcion ')' '{' declaraciones_funcion sentencias '}'

    TOK_INT       shift, and go to state 6
    TOK_BOOLEANO  shift, and go to state 7

    $default  reduce using rule 25 (parametros_funcion)

    tipo                go to state 91
    parametros_funcion  go to state 125
    parametro_funcion   go to state 93


State 96

    1 programa: inicio TOK_MAIN '{' declaraciones funciones escritura_main sentencias . '}' escribir_fin

    '}'  shift, and go to state 126


State 97

   84 cola_identificador: alfanumerico cola_identificador .

    $default  reduce using rule 84 (cola_identificador)


State 98

   17 identificadores: identificador ',' identificadores .

    $default  reduce using rule 17 (identificadores)


State 99

    2 programa: inicio TOK_MAIN '{' funciones escritura_main sentencias '}' .

    $default  reduce using rule 2 (programa)


State 100

   46 if_exp: TOK_IF '(' exp .
   54 exp: exp . '+' exp
   55    | exp . '-' exp
   56    | exp . '/' exp
   57    | exp . '*' exp
   59    | exp . TOK_AND exp
   60    | exp . TOK_OR exp

    TOK_AND  shift, and go to state 105
    TOK_OR   shift, and go to state 106
    '+'      shift, and go to state 107
    '-'      shift, and go to state 108
    '*'      shift, and go to state 109
    '/'      shift, and go to state 110

    $default  reduce using rule 46 (if_exp)


State 101

   54 exp: exp . '+' exp
   55    | exp . '-' exp
   56    | exp . '/' exp
   57    | exp . '*' exp
   58    | '-' exp .
   59    | exp . TOK_AND exp
   60    | exp . TOK_OR exp

    $default  reduce using rule 58 (exp)


State 102

   54 exp: exp . '+' exp
   55    | exp . '-' exp
   56    | exp . '/' exp
   57    | exp . '*' exp
   59    | exp . TOK_AND exp
   60    | exp . TOK_OR exp
   61    | '!' exp .

    $default  reduce using rule 61 (exp)


State 103

   54 exp: exp . '+' exp
   55    | exp . '-' exp
   56    | exp . '/' exp
   57    | exp . '*' exp
   59    | exp . TOK_AND exp
   60    | exp . TOK_OR exp
   64    | '(' exp . ')'
   72 comparacion: exp . TOK_IGUAL exp
   73            | exp . TOK_DISTINTO exp
   74            | exp . TOK_MAYORIGUAL exp
   75            | exp . TOK_MENORIGUAL exp
   76            | exp . '>' exp
   77            | exp . '<' exp

    TOK_AND         shift, and go to state 105
    TOK_OR          shift, and go to state 106
    TOK_IGUAL       shift, and go to state 127
    TOK_DISTINTO    shift, and go to state 128
    TOK_MENORIGUAL  shift, and go to state 129
    TOK_MAYORIGUAL  shift, and go to state 130
    '+'             shift, and go to state 107
    '-'             shift, and go to state 108
    '*'             shift, and go to state 109
    '/'             shift, and go to state 110
    ')'             shift, and go to state 131
    '>'             shift, and go to state 132
    '<'             shift, and go to state 133


State 104

   65 exp: '(' comparacion . ')'

    ')'  shift, and go to state 134


State 105

   59 exp: exp TOK_AND . exp

    TOK_IDENTIFICADOR     shift, and go to state 67
    TOK_CONSTANTE_ENTERA  shift, and go to state 68
    TOK_FALSE             shift, and go to state 69
    TOK_TRUE              shift, and go to state 70
    '-'                   shift, and go to state 71
    '!'                   shift, and go to state 72
    '('                   shift, and go to state 73

    elemento_vector   go to state 74
    exp               go to state 135
    constante         go to state 76
    constante_logica  go to state 77
    constante_entera  go to state 78
    letra             go to state 26
    identificador     go to state 79


State 106

   60 exp: exp TOK_OR . exp

    TOK_IDENTIFICADOR     shift, and go to state 67
    TOK_CONSTANTE_ENTERA  shift, and go to state 68
    TOK_FALSE             shift, and go to state 69
    TOK_TRUE              shift, and go to state 70
    '-'                   shift, and go to state 71
    '!'                   shift, and go to state 72
    '('                   shift, and go to state 73

    elemento_vector   go to state 74
    exp               go to state 136
    constante         go to state 76
    constante_logica  go to state 77
    constante_entera  go to state 78
    letra             go to state 26
    identificador     go to state 79


State 107

   54 exp: exp '+' . exp

    TOK_IDENTIFICADOR     shift, and go to state 67
    TOK_CONSTANTE_ENTERA  shift, and go to state 68
    TOK_FALSE             shift, and go to state 69
    TOK_TRUE              shift, and go to state 70
    '-'                   shift, and go to state 71
    '!'                   shift, and go to state 72
    '('                   shift, and go to state 73

    elemento_vector   go to state 74
    exp               go to state 137
    constante         go to state 76
    constante_logica  go to state 77
    constante_entera  go to state 78
    letra             go to state 26
    identificador     go to state 79


State 108

   55 exp: exp '-' . exp

    TOK_IDENTIFICADOR     shift, and go to state 67
    TOK_CONSTANTE_ENTERA  shift, and go to state 68
    TOK_FALSE             shift, and go to state 69
    TOK_TRUE              shift, and go to state 70
    '-'                   shift, and go to state 71
    '!'                   shift, and go to state 72
    '('                   shift, and go to state 73

    elemento_vector   go to state 74
    exp               go to state 138
    constante         go to state 76
    constante_logica  go to state 77
    constante_entera  go to state 78
    letra             go to state 26
    identificador     go to state 79


State 109

   57 exp: exp '*' . exp

    TOK_IDENTIFICADOR     shift, and go to state 67
    TOK_CONSTANTE_ENTERA  shift, and go to state 68
    TOK_FALSE             shift, and go to state 69
    TOK_TRUE              shift, and go to state 70
    '-'                   shift, and go to state 71
    '!'                   shift, and go to state 72
    '('                   shift, and go to state 73

    elemento_vector   go to state 74
    exp               go to state 139
    constante         go to state 76
    constante_logica  go to state 77
    constante_entera  go to state 78
    letra             go to state 26
    identificador     go to state 79


State 110

   56 exp: exp '/' . exp

    TOK_IDENTIFICADOR     shift, and go to state 67
    TOK_CONSTANTE_ENTERA  shift, and go to state 68
    TOK_FALSE             shift, and go to state 69
    TOK_TRUE              shift, and go to state 70
    '-'                   shift, and go to state 71
    '!'                   shift, and go to state 72
    '('                   shift, and go to state 73

    elemento_vector   go to state 74
    exp               go to state 140
    constante         go to state 76
    constante_logica  go to state 77
    constante_entera  go to state 78
    letra             go to state 26
    identificador     go to state 79


State 111

   67 exp: identificador '(' . lista_expresiones ')'

    TOK_IDENTIFICADOR     shift, and go to state 67
    TOK_CONSTANTE_ENTERA  shift, and go to state 68
    TOK_FALSE             shift, and go to state 69
    TOK_TRUE              shift, and go to state 70
    '-'                   shift, and go to state 71
    '!'                   shift, and go to state 72
    '('                   shift, and go to state 73

    $default  reduce using rule 69 (lista_expresiones)

    elemento_vector    go to state 74
    exp                go to state 141
    lista_expresiones  go to state 142
    constante          go to state 76
    constante_logica   go to state 77
    constante_entera   go to state 78
    letra              go to state 26
    identificador      go to state 79


State 112

   15 elemento_vector: TOK_IDENTIFICADOR '[' exp . ']'
   54 exp: exp . '+' exp
   55    | exp . '-' exp
   56    | exp . '/' exp
   57    | exp . '*' exp
   59    | exp . TOK_AND exp
   60    | exp . TOK_OR exp

    TOK_AND  shift, and go to state 105
    TOK_OR   shift, and go to state 106
    '+'      shift, and go to state 107
    '-'      shift, and go to state 108
    '*'      shift, and go to state 109
    '/'      shift, and go to state 110
    ']'      shift, and go to state 143


State 113

   42 asignacion: TOK_IDENTIFICADOR '=' exp .
   54 exp: exp . '+' exp
   55    | exp . '-' exp
   56    | exp . '/' exp
   57    | exp . '*' exp
   59    | exp . TOK_AND exp
   60    | exp . TOK_OR exp

    TOK_AND  shift, and go to state 105
    TOK_OR   shift, and go to state 106
    '+'      shift, and go to state 107
    '-'      shift, and go to state 108
    '*'      shift, and go to state 109
    '/'      shift, and go to state 110

    $default  reduce using rule 42 (asignacion)


State 114

   43 asignacion: elemento_vector '=' exp .
   54 exp: exp . '+' exp
   55    | exp . '-' exp
   56    | exp . '/' exp
   57    | exp . '*' exp
   59    | exp . TOK_AND exp
   60    | exp . TOK_OR exp

    TOK_AND  shift, and go to state 105
    TOK_OR   shift, and go to state 106
    '+'      shift, and go to state 107
    '-'      shift, and go to state 108
    '*'      shift, and go to state 109
    '/'      shift, and go to state 110

    $default  reduce using rule 43 (asignacion)


State 115

   44 condicional: if_exp ')' '{' . sentencias '}'
   47 if_else_exp: if_exp ')' '{' . sentencias '}'

    TOK_IF             shift, and go to state 30
    TOK_WHILE          shift, and go to state 31
    TOK_SCANF          shift, and go to state 32
    TOK_PRINTF         shift, and go to state 33
    TOK_RETURN         shift, and go to state 34
    TOK_IDENTIFICADOR  shift, and go to state 35

    elemento_vector   go to state 36
    sentencias        go to state 144
    sentencia         go to state 38
    sentencia_simple  go to state 39
    bloque            go to state 40
    asignacion        go to state 41
    condicional       go to state 42
    if_exp            go to state 43
    if_else_exp       go to state 44
    bucle             go to state 45
    while             go to state 46
    while_exp         go to state 47
    lectura           go to state 48
    escritura         go to state 49
    retorno_funcion   go to state 50


State 116

   45 condicional: if_else_exp TOK_ELSE '{' . sentencias '}'

    TOK_IF             shift, and go to state 30
    TOK_WHILE          shift, and go to state 31
    TOK_SCANF          shift, and go to state 32
    TOK_PRINTF         shift, and go to state 33
    TOK_RETURN         shift, and go to state 34
    TOK_IDENTIFICADOR  shift, and go to state 35

    elemento_vector   go to state 36
    sentencias        go to state 145
    sentencia         go to state 38
    sentencia_simple  go to state 39
    bloque            go to state 40
    asignacion        go to state 41
    condicional       go to state 42
    if_exp            go to state 43
    if_else_exp       go to state 44
    bucle             go to state 45
    while             go to state 46
    while_exp         go to state 47
    lectura           go to state 48
    escritura         go to state 49
    retorno_funcion   go to state 50


State 117

   50 while_exp: while exp ')' . '{'

    '{'  shift, and go to state 146


State 118

   48 bucle: while_exp sentencias '}' .

    $default  reduce using rule 48 (bucle)


State 119

   28 idpf: TOK_IDENTIFICADOR .

    $default  reduce using rule 28 (idpf)


State 120

   29 parametro_funcion: tipo idpf .

    $default  reduce using rule 29 (parametro_funcion)


State 121

   21 fn_declaration: fn_name TOK_PARENTESISIZQUIERDO parametros_funcion TOK_PARENTESISDERECHO . TOK_LLAVEIZQUIERDA declaraciones_funcion

    TOK_LLAVEIZQUIERDA  shift, and go to state 147


State 122

   26 resto_parametros_funcion: ';' . parametro_funcion resto_parametros_funcion

    TOK_INT       shift, and go to state 6
    TOK_BOOLEANO  shift, and go to state 7

    tipo               go to state 91
    parametro_funcion  go to state 148


State 123

   24 parametros_funcion: parametro_funcion resto_parametros_funcion .

    $default  reduce using rule 24 (parametros_funcion)


State 124

   14 clase_vector: TOK_ARRAY tipo '[' TOK_CONSTANTE_ENTERA ']' .

    $default  reduce using rule 14 (clase_vector)


State 125

   23 funcion: TOK_FUNCTION tipo TOK_IDENTIFICADOR '(' parametros_funcion . ')' '{' declaraciones_funcion sentencias '}'

    ')'  shift, and go to state 149


State 126

    1 programa: inicio TOK_MAIN '{' declaraciones funciones escritura_main sentencias '}' . escribir_fin

    $default  reduce using rule 5 (escribir_fin)

    escribir_fin  go to state 150


State 127

   72 comparacion: exp TOK_IGUAL . exp

    TOK_IDENTIFICADOR     shift, and go to state 67
    TOK_CONSTANTE_ENTERA  shift, and go to state 68
    TOK_FALSE             shift, and go to state 69
    TOK_TRUE              shift, and go to state 70
    '-'                   shift, and go to state 71
    '!'                   shift, and go to state 72
    '('                   shift, and go to state 73

    elemento_vector   go to state 74
    exp               go to state 151
    constante         go to state 76
    constante_logica  go to state 77
    constante_entera  go to state 78
    letra             go to state 26
    identificador     go to state 79


State 128

   73 comparacion: exp TOK_DISTINTO . exp

    TOK_IDENTIFICADOR     shift, and go to state 67
    TOK_CONSTANTE_ENTERA  shift, and go to state 68
    TOK_FALSE             shift, and go to state 69
    TOK_TRUE              shift, and go to state 70
    '-'                   shift, and go to state 71
    '!'                   shift, and go to state 72
    '('                   shift, and go to state 73

    elemento_vector   go to state 74
    exp               go to state 152
    constante         go to state 76
    constante_logica  go to state 77
    constante_entera  go to state 78
    letra             go to state 26
    identificador     go to state 79


State 129

   75 comparacion: exp TOK_MENORIGUAL . exp

    TOK_IDENTIFICADOR     shift, and go to state 67
    TOK_CONSTANTE_ENTERA  shift, and go to state 68
    TOK_FALSE             shift, and go to state 69
    TOK_TRUE              shift, and go to state 70
    '-'                   shift, and go to state 71
    '!'                   shift, and go to state 72
    '('                   shift, and go to state 73

    elemento_vector   go to state 74
    exp               go to state 153
    constante         go to state 76
    constante_logica  go to state 77
    constante_entera  go to state 78
    letra             go to state 26
    identificador     go to state 79


State 130

   74 comparacion: exp TOK_MAYORIGUAL . exp

    TOK_IDENTIFICADOR     shift, and go to state 67
    TOK_CONSTANTE_ENTERA  shift, and go to state 68
    TOK_FALSE             shift, and go to state 69
    TOK_TRUE              shift, and go to state 70
    '-'                   shift, and go to state 71
    '!'                   shift, and go to state 72
    '('                   shift, and go to state 73

    elemento_vector   go to state 74
    exp               go to state 154
    constante         go to state 76
    constante_logica  go to state 77
    constante_entera  go to state 78
    letra             go to state 26
    identificador     go to state 79


State 131

   64 exp: '(' exp ')' .

    $default  reduce using rule 64 (exp)


State 132

   76 comparacion: exp '>' . exp

    TOK_IDENTIFICADOR     shift, and go to state 67
    TOK_CONSTANTE_ENTERA  shift, and go to state 68
    TOK_FALSE             shift, and go to state 69
    TOK_TRUE              shift, and go to state 70
    '-'                   shift, and go to state 71
    '!'                   shift, and go to state 72
    '('                   shift, and go to state 73

    elemento_vector   go to state 74
    exp               go to state 155
    constante         go to state 76
    constante_logica  go to state 77
    constante_entera  go to state 78
    letra             go to state 26
    identificador     go to state 79


State 133

   77 comparacion: exp '<' . exp

    TOK_IDENTIFICADOR     shift, and go to state 67
    TOK_CONSTANTE_ENTERA  shift, and go to state 68
    TOK_FALSE             shift, and go to state 69
    TOK_TRUE              shift, and go to state 70
    '-'                   shift, and go to state 71
    '!'                   shift, and go to state 72
    '('                   shift, and go to state 73

    elemento_vector   go to state 74
    exp               go to state 156
    constante         go to state 76
    constante_logica  go to state 77
    constante_entera  go to state 78
    letra             go to state 26
    identificador     go to state 79


State 134

   65 exp: '(' comparacion ')' .

    $default  reduce using rule 65 (exp)


State 135

   54 exp: exp . '+' exp
   55    | exp . '-' exp
   56    | exp . '/' exp
   57    | exp . '*' exp
   59    | exp . TOK_AND exp
   59    | exp TOK_AND exp .
   60    | exp . TOK_OR exp

    $default  reduce using rule 59 (exp)


State 136

   54 exp: exp . '+' exp
   55    | exp . '-' exp
   56    | exp . '/' exp
   57    | exp . '*' exp
   59    | exp . TOK_AND exp
   60    | exp . TOK_OR exp
   60    | exp TOK_OR exp .

    TOK_AND  shift, and go to state 105
    '*'      shift, and go to state 109
    '/'      shift, and go to state 110

    $default  reduce using rule 60 (exp)


State 137

   54 exp: exp . '+' exp
   54    | exp '+' exp .
   55    | exp . '-' exp
   56    | exp . '/' exp
   57    | exp . '*' exp
   59    | exp . TOK_AND exp
   60    | exp . TOK_OR exp

    TOK_AND  shift, and go to state 105
    '*'      shift, and go to state 109
    '/'      shift, and go to state 110

    $default  reduce using rule 54 (exp)


State 138

   54 exp: exp . '+' exp
   55    | exp . '-' exp
   55    | exp '-' exp .
   56    | exp . '/' exp
   57    | exp . '*' exp
   59    | exp . TOK_AND exp
   60    | exp . TOK_OR exp

    TOK_AND  shift, and go to state 105
    '*'      shift, and go to state 109
    '/'      shift, and go to state 110

    $default  reduce using rule 55 (exp)


State 139

   54 exp: exp . '+' exp
   55    | exp . '-' exp
   56    | exp . '/' exp
   57    | exp . '*' exp
   57    | exp '*' exp .
   59    | exp . TOK_AND exp
   60    | exp . TOK_OR exp

    $default  reduce using rule 57 (exp)


State 140

   54 exp: exp . '+' exp
   55    | exp . '-' exp
   56    | exp . '/' exp
   56    | exp '/' exp .
   57    | exp . '*' exp
   59    | exp . TOK_AND exp
   60    | exp . TOK_OR exp

    $default  reduce using rule 56 (exp)


State 141

   54 exp: exp . '+' exp
   55    | exp . '-' exp
   56    | exp . '/' exp
   57    | exp . '*' exp
   59    | exp . TOK_AND exp
   60    | exp . TOK_OR exp
   68 lista_expresiones: exp . resto_lista_expresiones

    TOK_AND  shift, and go to state 105
    TOK_OR   shift, and go to state 106
    '+'      shift, and go to state 107
    '-'      shift, and go to state 108
    '*'      shift, and go to state 109
    '/'      shift, and go to state 110
    ','      shift, and go to state 157

    $default  reduce using rule 71 (resto_lista_expresiones)

    resto_lista_expresiones  go to state 158


State 142

   67 exp: identificador '(' lista_expresiones . ')'

    ')'  shift, and go to state 159


State 143

   15 elemento_vector: TOK_IDENTIFICADOR '[' exp ']' .

    $default  reduce using rule 15 (elemento_vector)


State 144

   44 condicional: if_exp ')' '{' sentencias . '}'
   47 if_else_exp: if_exp ')' '{' sentencias . '}'

    '}'  shift, and go to state 160


State 145

   45 condicional: if_else_exp TOK_ELSE '{' sentencias . '}'

    '}'  shift, and go to state 161


State 146

   50 while_exp: while exp ')' '{' .

    $default  reduce using rule 50 (while_exp)


State 147

   21 fn_declaration: fn_name TOK_PARENTESISIZQUIERDO parametros_funcion TOK_PARENTESISDERECHO TOK_LLAVEIZQUIERDA . declaraciones_funcion

    TOK_INT       shift, and go to state 6
    TOK_BOOLEANO  shift, and go to state 7
    TOK_ARRAY     shift, and go to state 8

    $default  reduce using rule 31 (declaraciones_funcion)

    declaraciones          go to state 162
    declaracion            go to state 11
    clase                  go to state 12
    clase_escalar          go to state 13
    tipo                   go to state 14
    clase_vector           go to state 15
    declaraciones_funcion  go to state 163


State 148

   26 resto_parametros_funcion: ';' parametro_funcion . resto_parametros_funcion

    ';'  shift, and go to state 122

    $default  reduce using rule 27 (resto_parametros_funcion)

    resto_parametros_funcion  go to state 164


State 149

   23 funcion: TOK_FUNCTION tipo TOK_IDENTIFICADOR '(' parametros_funcion ')' . '{' declaraciones_funcion sentencias '}'

    '{'  shift, and go to state 165


State 150

    1 programa: inicio TOK_MAIN '{' declaraciones funciones escritura_main sentencias '}' escribir_fin .

    $default  reduce using rule 1 (programa)


State 151

   54 exp: exp . '+' exp
   55    | exp . '-' exp
   56    | exp . '/' exp
   57    | exp . '*' exp
   59    | exp . TOK_AND exp
   60    | exp . TOK_OR exp
   72 comparacion: exp TOK_IGUAL exp .

    TOK_AND  shift, and go to state 105
    TOK_OR   shift, and go to state 106
    '+'      shift, and go to state 107
    '-'      shift, and go to state 108
    '*'      shift, and go to state 109
    '/'      shift, and go to state 110

    $default  reduce using rule 72 (comparacion)


State 152

   54 exp: exp . '+' exp
   55    | exp . '-' exp
   56    | exp . '/' exp
   57    | exp . '*' exp
   59    | exp . TOK_AND exp
   60    | exp . TOK_OR exp
   73 comparacion: exp TOK_DISTINTO exp .

    TOK_AND  shift, and go to state 105
    TOK_OR   shift, and go to state 106
    '+'      shift, and go to state 107
    '-'      shift, and go to state 108
    '*'      shift, and go to state 109
    '/'      shift, and go to state 110

    $default  reduce using rule 73 (comparacion)


State 153

   54 exp: exp . '+' exp
   55    | exp . '-' exp
   56    | exp . '/' exp
   57    | exp . '*' exp
   59    | exp . TOK_AND exp
   60    | exp . TOK_OR exp
   75 comparacion: exp TOK_MENORIGUAL exp .

    TOK_AND  shift, and go to state 105
    TOK_OR   shift, and go to state 106
    '+'      shift, and go to state 107
    '-'      shift, and go to state 108
    '*'      shift, and go to state 109
    '/'      shift, and go to state 110

    $default  reduce using rule 75 (comparacion)


State 154

   54 exp: exp . '+' exp
   55    | exp . '-' exp
   56    | exp . '/' exp
   57    | exp . '*' exp
   59    | exp . TOK_AND exp
   60    | exp . TOK_OR exp
   74 comparacion: exp TOK_MAYORIGUAL exp .

    TOK_AND  shift, and go to state 105
    TOK_OR   shift, and go to state 106
    '+'      shift, and go to state 107
    '-'      shift, and go to state 108
    '*'      shift, and go to state 109
    '/'      shift, and go to state 110

    $default  reduce using rule 74 (comparacion)


State 155

   54 exp: exp . '+' exp
   55    | exp . '-' exp
   56    | exp . '/' exp
   57    | exp . '*' exp
   59    | exp . TOK_AND exp
   60    | exp . TOK_OR exp
   76 comparacion: exp '>' exp .

    TOK_AND  shift, and go to state 105
    TOK_OR   shift, and go to state 106
    '+'      shift, and go to state 107
    '-'      shift, and go to state 108
    '*'      shift, and go to state 109
    '/'      shift, and go to state 110

    $default  reduce using rule 76 (comparacion)


State 156

   54 exp: exp . '+' exp
   55    | exp . '-' exp
   56    | exp . '/' exp
   57    | exp . '*' exp
   59    | exp . TOK_AND exp
   60    | exp . TOK_OR exp
   77 comparacion: exp '<' exp .

    TOK_AND  shift, and go to state 105
    TOK_OR   shift, and go to state 106
    '+'      shift, and go to state 107
    '-'      shift, and go to state 108
    '*'      shift, and go to state 109
    '/'      shift, and go to state 110

    $default  reduce using rule 77 (comparacion)


State 157

   70 resto_lista_expresiones: ',' . exp resto_lista_expresiones

    TOK_IDENTIFICADOR     shift, and go to state 67
    TOK_CONSTANTE_ENTERA  shift, and go to state 68
    TOK_FALSE             shift, and go to state 69
    TOK_TRUE              shift, and go to state 70
    '-'                   shift, and go to state 71
    '!'                   shift, and go to state 72
    '('                   shift, and go to state 73

    elemento_vector   go to state 74
    exp               go to state 166
    constante         go to state 76
    constante_logica  go to state 77
    constante_entera  go to state 78
    letra             go to state 26
    identificador     go to state 79


State 158

   68 lista_expresiones: exp resto_lista_expresiones .

    $default  reduce using rule 68 (lista_expresiones)


State 159

   67 exp: identificador '(' lista_expresiones ')' .

    $default  reduce using rule 67 (exp)


State 160

   44 condicional: if_exp ')' '{' sentencias '}' .
   47 if_else_exp: if_exp ')' '{' sentencias '}' .

    TOK_ELSE  reduce using rule 47 (if_else_exp)
    $default  reduce using rule 44 (condicional)


State 161

   45 condicional: if_else_exp TOK_ELSE '{' sentencias '}' .

    $default  reduce using rule 45 (condicional)


State 162

   30 declaraciones_funcion: declaraciones .

    $default  reduce using rule 30 (declaraciones_funcion)


State 163

   21 fn_declaration: fn_name TOK_PARENTESISIZQUIERDO parametros_funcion TOK_PARENTESISDERECHO TOK_LLAVEIZQUIERDA declaraciones_funcion .

    $default  reduce using rule 21 (fn_declaration)


State 164

   26 resto_parametros_funcion: ';' parametro_funcion resto_parametros_funcion .

    $default  reduce using rule 26 (resto_parametros_funcion)


State 165

   23 funcion: TOK_FUNCTION tipo TOK_IDENTIFICADOR '(' parametros_funcion ')' '{' . declaraciones_funcion sentencias '}'

    TOK_INT       shift, and go to state 6
    TOK_BOOLEANO  shift, and go to state 7
    TOK_ARRAY     shift, and go to state 8

    $default  reduce using rule 31 (declaraciones_funcion)

    declaraciones          go to state 162
    declaracion            go to state 11
    clase                  go to state 12
    clase_escalar          go to state 13
    tipo                   go to state 14
    clase_vector           go to state 15
    declaraciones_funcion  go to state 167


State 166

   54 exp: exp . '+' exp
   55    | exp . '-' exp
   56    | exp . '/' exp
   57    | exp . '*' exp
   59    | exp . TOK_AND exp
   60    | exp . TOK_OR exp
   70 resto_lista_expresiones: ',' exp . resto_lista_expresiones

    TOK_AND  shift, and go to state 105
    TOK_OR   shift, and go to state 106
    '+'      shift, and go to state 107
    '-'      shift, and go to state 108
    '*'      shift, and go to state 109
    '/'      shift, and go to state 110
    ','      shift, and go to state 157

    $default  reduce using rule 71 (resto_lista_expresiones)

    resto_lista_expresiones  go to state 168


State 167

   23 funcion: TOK_FUNCTION tipo TOK_IDENTIFICADOR '(' parametros_funcion ')' '{' declaraciones_funcion . sentencias '}'

    TOK_IF             shift, and go to state 30
    TOK_WHILE          shift, and go to state 31
    TOK_SCANF          shift, and go to state 32
    TOK_PRINTF         shift, and go to state 33
    TOK_RETURN         shift, and go to state 34
    TOK_IDENTIFICADOR  shift, and go to state 35

    elemento_vector   go to state 36
    sentencias        go to state 169
    sentencia         go to state 38
    sentencia_simple  go to state 39
    bloque            go to state 40
    asignacion        go to state 41
    condicional       go to state 42
    if_exp            go to state 43
    if_else_exp       go to state 44
    bucle             go to state 45
    while             go to state 46
    while_exp         go to state 47
    lectura           go to state 48
    escritura         go to state 49
    retorno_funcion   go to state 50


State 168

   70 resto_lista_expresiones: ',' exp resto_lista_expresiones .

    $default  reduce using rule 70 (resto_lista_expresiones)


State 169

   23 funcion: TOK_FUNCTION tipo TOK_IDENTIFICADOR '(' parametros_funcion ')' '{' declaraciones_funcion sentencias . '}'

    '}'  shift, and go to state 170


State 170

   23 funcion: TOK_FUNCTION tipo TOK_IDENTIFICADOR '(' parametros_funcion ')' '{' declaraciones_funcion sentencias '}' .

    $default  reduce using rule 23 (funcion)
